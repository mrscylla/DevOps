#Использовать cmdline

АргументыКС = Новый ПарсерАргументовКоманднойСтроки();
АргументыКС.ДобавитьИменованныйПараметр("-local");
АргументыКС.ДобавитьИменованныйПараметр("-base");
АргументыКС.ДобавитьИменованныйПараметр("-remote");
АргументыКС.ДобавитьИменованныйПараметр("-result");

Параметры = АргументыКС.Разобрать(АргументыКоманднойСтроки);

ИнфоОСкрипте = ТекущийСценарий();
КаталогСкрипта = ИнфоОСкрипте.Каталог;

ПодключитьСценарий(ОбъединитьПути(КаталогСкрипта, "..\lib\git.os"), "git");
git = Новый git();

ЛевыйФайл = Новый Файл(ОбъединитьПути(ТекущийКаталог(), Параметры["-local"]));
БазовыйФайл = Новый Файл(ОбъединитьПути(ТекущийКаталог(), Параметры["-base"]));
ПравыйФайл = Новый Файл(ОбъединитьПути(ТекущийКаталог(), Параметры["-remote"]));
ИтоговыйФайл = Новый Файл(ОбъединитьПути(ТекущийКаталог(), Параметры["-result"]));

Сообщить("local: " + ЛевыйФайл.ПолноеИмя);
Сообщить("remote: " + ПравыйФайл.ПолноеИмя);
Сообщить("base: " + БазовыйФайл.ПолноеИмя);
Сообщить("result: " + ИтоговыйФайл.ПолноеИмя);

ТекущаяВетка = git.ПолучитьНазваниеТекущейВетки(ТекущийКаталог());
ВеткаСлияния = git.ПолучитьНазваниеВеткиСлияния();

Сообщить("Текущая ветка: " + ТекущаяВетка);
Сообщить("Ветка слияния ветка: " + ВеткаСлияния);

Если 	Найти(ВеткаСлияния, "origin1c") > 0 И
		(ИтоговыйФайл.Имя = "Rights.xml" ИЛИ
		ИтоговыйФайл.Имя = "Form.xml" ИЛИ
		ИтоговыйФайл.Имя = "Template.xml" ИЛИ
		ИтоговыйФайл.Имя = "ru.html")
		
		Тогда
		
		Сообщить("Выбираю ""их"" файл! Копирую " + ПравыйФайл.ПолноеИмя + " в " + ЛевыйФайл.ПолноеИмя + "(" + ИтоговыйФайл.ПолноеИмя + ")");
		
		КопироватьФайл(ПравыйФайл.ПолноеИмя, ЛевыйФайл.ПолноеИмя);
		
		ЗавершитьРаботу(0);

ИначеЕсли Найти(ТекущаяВетка, "origin1c") > 0 И
		(ИтоговыйФайл.Имя = "Rights.xml" ИЛИ
		ИтоговыйФайл.Имя = "Form.xml" ИЛИ
		ИтоговыйФайл.Имя = "Template.xml" ИЛИ
		ИтоговыйФайл.Имя = "ru.html")
		
		Тогда

		Сообщить("Выбираю ""наш"" файл: " + ИтоговыйФайл.ПолноеИмя + "(оставляем " + ЛевыйФайл.ПолноеИмя + ")");

		ЗавершитьРаботу(0);
		
КонецЕсли;		

Сообщить("Запуск ""oso xml"" для: " + ИтоговыйФайл.ПолноеИмя);

ПроцессДрайвера = Создатьпроцесс("""C:\Program Files\Oso\XMLMerge\2\OsoXMLMerge.exe"" -merge -silent -checkconflicts -base " + БазовыйФайл.Имя + " -left " + ЛевыйФайл.Имя + " -right " + ПравыйФайл.Имя + " -result " + ЛевыйФайл.Имя
								,ТекущийКаталог()
								,Истина
								,Ложь
								,КодировкаТекста.UTF8);
ПроцессДрайвера.Запустить();										
ПроцессДрайвера.ОжидатьЗавершения();

Если ПроцессДрайвера.ПотокВывода.ЕстьДанные Тогда

	Сообщить(ПроцессДрайвера.ПотокВывода.Прочитать());

КонецЕсли;

Если ПроцессДрайвера.КодВозврата < 0 Тогда
	
	Сообщить("Обнаружен конфликт в файле " + ИтоговыйФайл.ПолноеИмя);
	ЗТ = Новый ЗаписьТекста(ЛевыйФайл.ПолноеИмя, КодировкаТекста.UTF8, Истина);
	ЗТ.ЗаписатьСтроку(">>>>>>>>>>>>>> conflicted");
	ЗТ.Закрыть();

	ЗавершитьРаботу(1);
	
КонецЕсли;

ЗавершитьРаботу(0);