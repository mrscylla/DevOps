#Использовать cmdline
#Использовать gitrunner

Функция ФайлВСпискеНеИзменяемых(ИмяФайла)
	Возврат ИмяФайла = "Rights.xml" ИЛИ
	ИмяФайла = "Form.xml" ИЛИ
	ИмяФайла = "Template.xml" ИЛИ
	ИмяФайла = "ru.html"
КонецФункции

Функция ВеткиСтрокой(ТаблицаИмен)
	Результат = "";
	МассивРезультат = ТаблицаИмен.ВыгрузитьКолонку("Имя");
	Результат = СтрСоединить(МассивРезультат, ", ");

	Возврат Результат;
КонецФункции	

АргументыКС = Новый ПарсерАргументовКоманднойСтроки();
АргументыКС.ДобавитьИменованныйПараметр("-local");
АргументыКС.ДобавитьИменованныйПараметр("-base");
АргументыКС.ДобавитьИменованныйПараметр("-remote");
АргументыКС.ДобавитьИменованныйПараметр("-result");
АргументыКС.ДобавитьИменованныйПараметр("-l");
АргументыКС.ДобавитьИменованныйПараметр("-b");
АргументыКС.ДобавитьИменованныйПараметр("-r");

Параметры = АргументыКС.Разобрать(АргументыКоманднойСтроки);

ИнфоОСкрипте = ТекущийСценарий();
КаталогСкрипта = ИнфоОСкрипте.Каталог;

git = Новый ГитРепозиторий();
git.УстановитьРабочийКаталог(ТекущийКаталог());

ЛевыйФайл = Новый Файл(ОбъединитьПути(ТекущийКаталог(), Параметры["-local"]));
БазовыйФайл = Новый Файл(ОбъединитьПути(ТекущийКаталог(), Параметры["-base"]));
ПравыйФайл = Новый Файл(ОбъединитьПути(ТекущийКаталог(), Параметры["-remote"]));
ИтоговыйФайл = Новый Файл(ОбъединитьПути(ТекущийКаталог(), Параметры["-result"]));

Сообщить("local: " + ЛевыйФайл.ПолноеИмя);
Сообщить("remote: " + ПравыйФайл.ПолноеИмя);
Сообщить("base: " + БазовыйФайл.ПолноеИмя);
Сообщить("result: " + ИтоговыйФайл.ПолноеИмя);

НашКоммит = СтрРазделить(Параметры["-l"],":")[0];
ИхКоммит = СтрРазделить(Параметры["-r"],":")[0];
БазовыйКоммит = СтрРазделить(Параметры["-b"],":")[0];


Сообщить("l: " + НашКоммит);
Сообщить("r: " + ИхКоммит);
Сообщить("b: " + БазовыйКоммит);

ТекущаяВетка = git.ПолучитьТекущуюВетку();
ВеткиСлияния = git.ПолучитьСписокВеток(Ложь, ИхКоммит);

Сообщить("Текущая ветка: " + ТекущаяВетка);
Сообщить("Ветки слияния ветка: " + ВеткиСтрокой(ВеткиСлияния));

Ориджин1С = "";

Если 	НЕ ВеткиСлияния.Найти("origin1c", "Имя") = Неопределено Тогда
	
	Ориджин1С = "right";

	Если ФайлВСпискеНеИзменяемых(ИтоговыйФайл.Имя) Тогда
		Сообщить("Выбираю ""их"" файл! Копирую " + ПравыйФайл.ПолноеИмя + " в " + ЛевыйФайл.ПолноеИмя + "(" + ИтоговыйФайл.ПолноеИмя + ")");
		
		КопироватьФайл(ПравыйФайл.ПолноеИмя, ЛевыйФайл.ПолноеИмя);
		
		ЗавершитьРаботу(0);
	КонецЕсли;	

ИначеЕсли Найти(ТекущаяВетка, "origin1c") > 0 Тогда

	Ориджин1С = "left";

	Если ФайлВСпискеНеИзменяемых(ИтоговыйФайл.Имя) Тогда		

		Сообщить("Выбираю ""наш"" файл: " + ИтоговыйФайл.ПолноеИмя + "(оставляем " + ЛевыйФайл.ПолноеИмя + ")");

		ЗавершитьРаботу(0);

	КонецЕсли;
		
КонецЕсли;		

Сообщить("Запуск ""oso xml"" для: " + ИтоговыйФайл.ПолноеИмя);

ПроцессДрайвера = Создатьпроцесс("""C:\Program Files\Oso\XMLMerge\2\OsoXMLMerge.exe"" -merge -silent -checkconflicts -base " + БазовыйФайл.Имя + " -left " + ЛевыйФайл.Имя + " -right " + ПравыйФайл.Имя + " -result " + ЛевыйФайл.Имя
								,ТекущийКаталог()
								,Истина
								,Ложь
								,КодировкаТекста.UTF8);
ПроцессДрайвера.Запустить();										
ПроцессДрайвера.ОжидатьЗавершения();

Если ПроцессДрайвера.ПотокВывода.ЕстьДанные Тогда

	Сообщить(ПроцессДрайвера.ПотокВывода.Прочитать());

КонецЕсли;

Если ПроцессДрайвера.КодВозврата < 0 Тогда
	
	Сообщить("Обнаружен конфликт в файле " + ИтоговыйФайл.ПолноеИмя);
	ЗТ = Новый ЗаписьТекста(ЛевыйФайл.ПолноеИмя, КодировкаТекста.UTF8, Истина);
	ЗТ.ЗаписатьСтроку(">>>>>>>>>>>>>> conflicted");
	ЗТ.Закрыть();

	ЗавершитьРаботу(1);
	
КонецЕсли;

ЗавершитьРаботу(0);