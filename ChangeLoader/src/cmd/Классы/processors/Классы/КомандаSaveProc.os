///////////////////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией работы команды
//
///////////////////////////////////////////////////////////////////////////////

#Использовать logos
#Использовать fs
#Использовать "../../../../core"

Перем Конфигуратор;

Перем ИмяОбработкиВыгрузкиЗагрузки;
Перем КаталогОбработок;

Перем ЛогПриложения;
Перем ЛогВыгрузкиОбработок;

Процедура ОписаниеКоманды(Знач Команда) Экспорт

	УстановитьПараметрыКоманды(Команда);
	УстановитьКоманды(Команда);

КонецПроцедуры // НастроитьКоманду

Процедура УстановитьКоманды(Знач Команда)

КонецПроцедуры

Процедура УстановитьПараметрыКоманды(Знач Команда)

	Команда.Аргумент("PROCESSOR", , "Путь к обработке, которая будет запущена для выгрузки внешних обработок")
		.ТСтрока()
	;

	Команда.Аргумент("PATH", , "Каталог для выгрузки обработок")
		.ТСтрока()
	;

	Команда.Спек = "PROCESSOR PATH";

КонецПроцедуры


// Выполняет присваивание значений входящих параметров переменным модуля
//
// Параметры:
//	Команда - КомандаПриложения - выполняемая команда
//
Процедура ПрочитатьВходящиеПараметры(Знач Команда)

	ПараметрыПриложения.УстановитьПараметрыПриложения(Команда.Приложение);

	ИмяОбработкиВыгрузкиЗагрузки = Команда.ЗначениеАргумента("PROCESSOR");
	КаталогОбработок = Команда.ЗначениеАргумента("PATH");

	ЛогВыгрузкиОбработок = ОбъединитьПути(ПараметрыПриложения.КаталогЛогов(), "save_processors.log");

	// КаталогСкрипта = ОбъединитьПути(ТекущийСценарий().Каталог, "..\..\..\..\..\..");
	// ИмяОбработкиВыгрузкиЗагрузки = ОбъединитьПути(КаталогСкрипта, "..\tools\ВыгрузкаЗагрузкаДополнительныхОтчетовИОбработок.epf");

КонецПроцедуры

Процедура ПодготовитьСлужебныеФайлы()

	ФС.ОбеспечитьКаталог(КаталогОбработок);

	ОбщийФункционал.ОчиститьТекстовыйФайл(ЛогВыгрузкиОбработок);

КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   Команда - Соответствие - Соответствие ключей командной строки и их значений
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ПрочитатьВходящиеПараметры(Команда);
	ПодготовитьСлужебныеФайлы();

	Конфигуратор = ПараметрыПриложения.ПодключитьКонфигуратор();

	ВыполнитьВыгрузкуВнешнихОбработок();
	
КонецПроцедуры // ВыполнитьКоманду

Процедура ВыполнитьВыгрузкуВнешнихОбработок()

	ЛогПриложения.Информация("Начало выгрузки внешних обработок из ИБ");

	Конфигуратор.УстановитьИмяФайлаСообщенийПлатформы(ЛогВыгрузкиОбработок, Ложь);
	
	ПараметрыОбработки = ПараметрыЗапускаВнешнейОбработки();
	ПараметрыОбработки.РежимРаботы = "Выгрузка";
	ПараметрыОбработки.КаталогОбработок = КаталогОбработок;
	// BSLLS:MissingTemporaryFileDeletion-off
	ПараметрыОбработки.ПутьКЛогам = ПолучитьИмяВременногоФайла(".txt");
	// BSLLS:MissingTemporaryFileDeletion-on
	КлючЗапуска = КлючЗапускаВнешнейОбработки(ПараметрыОбработки);

	ВыполнениеОбработки = СтрШаблон("/execute""%1""", ИмяОбработкиВыгрузкиЗагрузки);
	Результат = Истина;
	Попытка
		Конфигуратор.ЗапуститьВРежимеПредприятия(КлючЗапуска, , ВыполнениеОбработки);
	Исключение
		Результат = Ложь;
	КонецПопытки;

	СкопироватьЛогИзВременногоФайла(ПараметрыОбработки.ПутьКЛогам, ЛогВыгрузкиОбработок);

	ТекстСообщения = "Выгрузка внешних обработок из ИБ завершена %1";
	Если Результат Тогда
		ЛогПриложения.Информация(СтрШаблон(ТекстСообщения, "успешно"));
	Иначе
		ЛогПриложения.Информация(СтрШаблон(ТекстСообщения, "с ошибками"));
	КонецЕсли;

КонецПроцедуры

Процедура СкопироватьЛогИзВременногоФайла(Источник, Приемник)

	ЛогПлатформы = Новый ЧтениеТекста(Источник);
	ЛогОбработки = Новый ЗаписьТекста(Приемник, , , Истина);
	ЛогОбработки.ЗаписатьСтроку(ЛогПлатформы.Прочитать());

	ЛогПлатформы.Закрыть();
	ЛогОбработки.Закрыть();

	УдалитьФайлы(Источник);

КонецПроцедуры

Функция ПараметрыЗапускаВнешнейОбработки()
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("РежимРаботы");
	Параметры.Вставить("КаталогОбработок");
	Параметры.Вставить("ПутьКЛогам");
	Параметры.Вставить("ЗавершитьРаботуСистемы");
	
	Возврат Параметры;
	
КонецФункции

Функция КлючЗапускаВнешнейОбработки(Параметры)
	
	КлючЗапуска = "";
	Для Каждого КлючИЗначение Из Параметры Цикл
		КлючЗапуска = КлючЗапуска
			+ ?(Не ПустаяСтрока(КлючЗапуска), ";", "")
			+ СтрШаблон("%1&%2", КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Возврат КлючЗапуска;
	
КонецФункции

ЛогПриложения = ПараметрыПриложения.Лог();



