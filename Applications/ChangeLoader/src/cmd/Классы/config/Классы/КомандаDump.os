///////////////////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией работы команды
//
///////////////////////////////////////////////////////////////////////////////

#Использовать logos
#Использовать fs
#Использовать "../../../../core"

Перем Конфигуратор;

Перем СинтаксическийКонтроль;

Перем ВыгрузкаКонфигурации;

Перем ВыгрузкаРасширения;
Перем НаименованияРасширений;

Перем КаталогПоставки;
Перем ФлагОбновления;

Перем ЛогПриложения;
Перем ЛогПлатформы;



Процедура ОписаниеКоманды(Знач Команда) Экспорт

	УстановитьПараметрыКоманды(Команда);
	УстановитьКоманды(Команда);

КонецПроцедуры // НастроитьКоманду

Процедура УстановитьКоманды(Знач Команда)

КонецПроцедуры

Процедура УстановитьПараметрыКоманды(Знач Команда)

	Команда.Опция("s syntax", Ложь, "Синтаксический контроль перед выгрузкой")
		.ТБулево()
	;

	Команда.Опция("c config", Ложь, "Выгрузка основной конфигурации")
		.ТБулево()
	;

	Команда.Опция("e extension", , "Имена расширений для выгрузки (-e=ext1 -e=ext2 ...)")
		.ТМассивСтрок()
	;

	Команда.Аргумент("PATH", , "Каталог для выгрузки файла конфигурации")
		.ТСтрока()
	;

	Команда.Спек = "[-s] ((-c | -e...) | (-c -e...)) PATH";

КонецПроцедуры


// Выполняет присваивание значений входящих параметров переменным модуля
//
// Параметры:
//	Команда - КомандаПриложения - выполняемая команда
//
Процедура ПрочитатьВходящиеПараметры(Знач Команда)

	ПараметрыПриложения.УстановитьПараметрыПриложения(Команда.Приложение);

	СинтаксическийКонтроль = Команда.ЗначениеОпции("syntax");
	ВыгрузкаКонфигурации = Команда.ЗначениеОпции("config");
	
	НаименованияРасширений = Команда.ЗначениеОпции("extension");
	ВыгрузкаРасширения = НаименованияРасширений.Количество();

	КаталогПоставки = Команда.ЗначениеАргумента("PATH");

	ФлагОбновления = ОбъединитьПути(КаталогПоставки, "update_cfg.flg");
	ЛогПлатформы = ОбъединитьПути(ПараметрыПриложения.КаталогЛогов(), "dump_cfg.log");

КонецПроцедуры

Процедура ПодготовитьСлужебныеФайлы()

	ФС.ОбеспечитьКаталог(КаталогПоставки);

	ОбщийФункционал.ОчиститьТекстовыйФайл(ЛогПлатформы);
	ОбщийФункционал.ОчиститьТекстовыйФайл(ФлагОбновления);

КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   Приложение - Модуль - Модуль менеджера приложения
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ПрочитатьВходящиеПараметры(Команда);
	ПодготовитьСлужебныеФайлы();

	Конфигуратор = ПараметрыПриложения.ПодключитьКонфигуратор();
	НастройкиВыгрузки = ПодготовитьНастройкиВыгрузкиКонфигураций();

	ВыполнитьСинтаксическийКонтроль(НастройкиВыгрузки);
	ВыполнитьВыгрузкуКонфигурацийВФайл(НастройкиВыгрузки);
	
КонецПроцедуры // ВыполнитьКоманду

Функция ПодготовитьНастройкиВыгрузкиКонфигураций()

	Настройки = Новый ТаблицаЗначений();
	Настройки.Колонки.Добавить("Наименование");
	Настройки.Колонки.Добавить("ИмяФайлаВыгрузки");
	Настройки.Колонки.Добавить("ДополнительныйКлюч");
	Настройки.Колонки.Добавить("СинтаксическийКонтроль");

	Если ВыгрузкаКонфигурации Тогда
		ДобавитьНастройкуВыгрузкиКонфигурации(Настройки, 
			"Основная", 
			ОбъединитьПути(КаталогПоставки, "config.cf")
		);
	КонецЕсли;

	Для Каждого Расширение Из НаименованияРасширений Цикл
		ДобавитьНастройкуВыгрузкиКонфигурации(Настройки, 
			Расширение, 
			ОбъединитьПути(КаталогПоставки, СтрШаблон("%1.cfe", Расширение)),
			СтрШаблон("-Extension %1", ОбщийФункционал.ОбернутьВКавычки(Расширение))
		);
	КонецЦикла;

	Возврат Настройки;

КонецФункции

Процедура ДобавитьНастройкуВыгрузкиКонфигурации(Знач Настройки, Знач Наименование, Знач ИмяФайлаВыгрузки, Знач ДополнительныйКлюч = "")

	НоваяСтрока = Настройки.Добавить();
	НоваяСтрока.Наименование = Наименование;
	НоваяСтрока.ИмяФайлаВыгрузки = ИмяФайлаВыгрузки;
	НоваяСтрока.ДополнительныйКлюч = ДополнительныйКлюч;
	НоваяСтрока.СинтаксическийКонтроль = СинтаксическийКонтроль;

КонецПроцедуры

Процедура ЗаписатьФлагНеобходимостиОбновления(Знач ФайлВыгрузки)

	ЗаписьТекста = Новый ЗаписьТекста(ФлагОбновления, , , Истина);
	ЗаписьТекста.ЗаписатьСтроку(ФайлВыгрузки);
	ЗаписьТекста.Закрыть();

	ЛогПриложения.Информация(СтрШаблон("Создан флаг необходимости обновления конфигурации: %1", ФлагОбновления));

КонецПроцедуры

Процедура ВыполнитьСинтаксическийКонтроль(НастройкиВыгрузки)

	Если Не СинтаксическийКонтроль Тогда
		Возврат;
	КонецЕсли;

	ЛогПриложения.Информация("Начало синтаксического контроля");

	ПараметрыПроверки = "-ThinClient -WebClient -Server -ExternalConnection";

	Конфигуратор.УстановитьИмяФайлаСообщенийПлатформы(ЛогПлатформы, Ложь);
	Для Каждого Настройка Из НастройкиВыгрузки Цикл

		ТекстСообщения = СтрШаблон("Синтаксический контроль: %1", Настройка.Наименование);
		ЛогПриложения.Информация(ТекстСообщения);
		ОбщийФункционал.ЗаписатьВТекстовыйФайл(ЛогПлатформы, Символы.ПС + ТекстСообщения);

		ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
		ПараметрыЗапуска.Добавить(СтрШаблон("/CheckModules %1 %2", ПараметрыПроверки, Настройка.ДополнительныйКлюч));

		Результат = Истина;
		Попытка
			Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);
		Исключение
			Результат = Ложь;
		КонецПопытки;

		Настройка.СинтаксическийКонтроль = Результат;

		ТекстСообщения = "Синтаксический контроль конфигурации %1 завершен %2";
		Если Результат Тогда
			ЛогПриложения.Информация(СтрШаблон(ТекстСообщения, Настройка.Наименование, "успешно"));
		Иначе
			ЛогПриложения.Информация(СтрШаблон(ТекстСообщения, Настройка.Наименование, "с ошибками"));
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура ВыполнитьВыгрузкуКонфигурацийВФайл(Знач НастройкиВыгрузки)

	ЛогПриложения.Информация("Начало выгрузки конфигураций в файлы");

	Конфигуратор.УстановитьИмяФайлаСообщенийПлатформы(ЛогПлатформы, Ложь);
	Для Каждого Настройка Из НастройкиВыгрузки Цикл

		Если Не Настройка.СинтаксическийКонтроль Тогда
			ТекстСообщения = СтрШаблон("Пропущена выгрузка конфигурации: %1", Настройка.Наименование);
			ОбщийФункционал.ЗаписатьВТекстовыйФайл(ЛогПлатформы, Символы.ПС + ТекстСообщения);
			ЛогПриложения.Информация(ТекстСообщения);

			Продолжить;
		КонецЕсли;

		ТекстСообщения = СтрШаблон("Выгрузка конфигурации в файл: %1", Настройка.Наименование);
		ОбщийФункционал.ЗаписатьВТекстовыйФайл(ЛогПлатформы, Символы.ПС + ТекстСообщения);
		ЛогПриложения.Информация(ТекстСообщения);

		ПараметрыЗапуска = Конфигуратор.ПолучитьПараметрыЗапуска();
		ПараметрыЗапуска.Добавить(СтрШаблон("/DumpCfg %1 %2", Настройка.ИмяФайлаВыгрузки, Настройка.ДополнительныйКлюч));

		Результат = Истина;
		Попытка
			Конфигуратор.ВыполнитьКоманду(ПараметрыЗапуска);
		Исключение
			Результат = Ложь;
		КонецПопытки;

		ТекстСообщения = "Выгрузка конфигурации %1 завершена %2";
		Если Результат Тогда
			ЛогПриложения.Информация(СтрШаблон(ТекстСообщения, Настройка.Наименование, "успешно"));
			ЗаписатьФлагНеобходимостиОбновления(Настройка.ИмяФайлаВыгрузки);
		Иначе
			ЛогПриложения.Информация(СтрШаблон(ТекстСообщения, Настройка.Наименование, "с ошибками"));
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

ЛогПриложения = ПараметрыПриложения.Лог();



